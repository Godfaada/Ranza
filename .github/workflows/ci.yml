\name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ranza
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 10
      redis:
        image: redis:7
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping || exit 1" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      # 1Ô∏è‚É£ Checkout code
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install pnpm globally
      - name: Install pnpm
        run: npm install -g pnpm

      # 4Ô∏è‚É£ Cache dependencies
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            packages/api/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 5Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      # 6Ô∏è‚É£ Setup environment variables
      - name: Set up env for API
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ranza?schema=public" >> packages/api/.env
          echo "REDIS_URL=redis://localhost:6379" >> packages/api/.env
          echo "JWT_SECRET=ci-secret" >> packages/api/.env

      # 7Ô∏è‚É£ Wait for services to be healthy
      - name: Wait for Postgres & Redis
        run: |
          npx wait-port localhost:5432
          npx wait-port localhost:6379

      # 8Ô∏è‚É£ Generate Prisma client
      - name: Generate Prisma client
        run: pnpm -C packages/api run prisma:generate

      # 9Ô∏è‚É£ Apply migrations
      - name: Deploy Prisma migrations
        run: pnpm -C packages/api run prisma:deploy

      # üîü Seed the database
      - name: Seed DB
        run: pnpm -C packages/api run prisma:seed

      # 1Ô∏è‚É£1Ô∏è‚É£ Optional debug info
      - name: Debug DB
        run: |
          cat packages/api/.env
          psql -h localhost -U postgres -d ranza -c "\dt"

      # 1Ô∏è‚É£2Ô∏è‚É£ Run tests
      - name: Run API tests
        run: pnpm -C packages/api run test
